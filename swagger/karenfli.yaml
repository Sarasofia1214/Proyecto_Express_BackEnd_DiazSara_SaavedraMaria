openapi: 3.0.0
info:
  title: Karenflix API
  version: 1.0.0
  description: API para gestionar usuarios y películas en Karenflix.

servers:
  - url: http://38.242.206.120:3000

paths:
  /api/auth/register:
    post:
      summary: Registrar un nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - usuario
                - password
              properties:
                usuario:
                  type: string
                  example: "sara123"
                password:
                  type: string
                  example: "Password123!"
      responses:
        "201":
          description: Usuario registrado exitosamente
        "400":
          description: Error de validación o usuario existente
        "500":
          description: Error interno del servidor

  /api/auth/login:
    post:
      summary: Iniciar sesión
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - usuario
                - password
              properties:
                usuario:
                  type: string
                  example: "sara123"
                password:
                  type: string
                  example: "Password123!"
      responses:
        "200":
          description: Login exitoso, devuelve token JWT
        "401":
          description: Credenciales inválidas
        "500":
          description: Error interno del servidor

  /api/peliculas:
    get:
      summary: Obtener todas las películas
      tags: [Peliculas]
      responses:
        "200":
          description: Lista de películas
        "500":
          description: Error interno del servidor
    post:
      summary: Crear una nueva película (solo Admin)
      tags: [Peliculas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - titulo
                - descripcion
                - year
              properties:
                titulo:
                  type: string
                  example: "Inception"
                descripcion:
                  type: string
                  example: "Un ladrón que roba secretos corporativos..."
                year:
                  type: integer
                  example: 2010
                imagen:
                  type: string
                  example: "https://miapi.com/img/inception.jpg"
                id_categoria:
                  type: string
                  example: "68d02844bda0ffb89e717da2"
      responses:
        "201":
          description: Película creada exitosamente
        "400":
          description: Error de validación
        "401":
          description: No autorizado
        "500":
          description: Error interno del servidor

  /api/peliculas/{id}:
    get:
      summary: Obtener una película por ID
      tags: [Peliculas]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "68d49ba619c614a43e730c7c"
      responses:
        "200":
          description: Detalle de la película
        "404":
          description: Película no encontrada
        "500":
          description: Error interno del servidor
    put:
      summary: Actualizar una película por ID (solo Admin)
      tags: [Peliculas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "68d49ba619c614a43e730c7c"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                titulo:
                  type: string
                  example: "Matrix Reloaded"
                descripcion:
                  type: string
                  example: "Neo regresa a luchar contra las máquinas."
                year:
                  type: integer
                  example: 2003
                imagen:
                  type: string
                  example: "https://miapi.com/img/matrix2.jpg"
                id_categoria:
                  type: string
                  example: "650c0a35a1f23c6b8e5f5678"
      responses:
        "200":
          description: Película actualizada exitosamente
        "400":
          description: Error de validación
        "401":
          description: No autorizado
        "404":
          description: Película no encontrada
        "500":
          description: Error interno del servidor
    delete:
      summary: Eliminar una película por ID (solo Admin)
      tags: [Peliculas]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: "68d49ba619c614a43e730c7c"
      responses:
        "200":
          description: Película eliminada exitosamente
        "401":
          description: No autorizado
        "404":
          description: Película no encontrada
        "500":
          description: Error interno del servidor

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
